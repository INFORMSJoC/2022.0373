function [X,fval] = high_risk_screening_regular_policy( overall_budget_per_interval,budget_interval,Y,fileID )

% path(path,'C:\Program Files\IBM\ILOG\CPLEX_Studio_Preview126\cplex\matlab\x64_win64;')
% path(path,'C:\Program Files (x86)\IBM\ILOG\CPLEX_Studio_Preview126\cplex\matlab\x86_win32;')
format long


%TI_BC = Time Interval for (each) Budget Constraint
TI_BC = budget_interval;
BUDGET_OF_SCREENING = overall_budget_per_interval;
Action=5;
State=6;
PO_State = 3;
Time=75+1;
AST = Action*State*Time;

% 1=HEALTHY, 2=IN-SITU BC, 3=INVASIVE BC, 4=IN-SITU TREATMENT, 5=INVASIVE TREATMENT, 6=DEATH 
% 1=WAIT, 2=MAMMOGRAM, 3=MRI, 4=ULTRASOUND, 5=MRI+MAM 

%--------------------------------------------------------------------------------------------------------

%------------TYPES OF THE VARIABLES START-------------
for i=1:AST
ctype(i) = char(67);
ctype(i+AST) = char(66);
end
% 'C' for continuous variables char(67)== C
% 'B' for binary variables     char(66)== B
%------------TYPES OF THE VARIABLES END---------------

%--------------------------------------------------------------------------------------------------------

%-----------CONSTRAINTS LINKING CONTINUOUS AND BINARY VARIABLES START -------------- 1530 Constraints 

% x(s,a,t) <= I(s,a,t)  implies x(s,a,t)- I(s,a,t) <= 0  


for  j = 0:AST-1

     cons(j+1,:) = [ zeros(1,j)  1 zeros(1,AST-1) -1 zeros(1,AST-1-j) ];
end

b_cons = zeros(AST,1); %column vector

%-----------CONSTRAINTS LINKING CONTINUOUS AND BINARY VARIABLES END ----------------

%--------------------------------------------------------------------------------------------------------

%-----------------INITIAL DISTRIBUTION EQUATIONS START-------------------------------6 Constraints

%Gail incidence ratio: Age <50: 0.53 Age >= 50 : 0.31
beta = [(1-1.53*0.0001055) (0.53*0.0001055) 0.0001055 0 0 0]; %initial distribution of the population

% x(s,a=1,t=1) + x(s,a=2,t=1) + x(s,a=3,t=1) + x(s,a=4,t=1) + x(s,a=5,t=1) = beta(s) s=1,2,3,4,5,6  

row1 = [ 1 0 0 0 0 0 ...
         1 0 0 0 0 0 ...
         1 0 0 0 0 0 ...
         1 0 0 0 0 0 ...
         1 0 0 0 0 0 ...       
         zeros(1,Action*State*(Time-1)) ...
         zeros(1,AST) ];

row2 = [ 0 1 0 0 0 0 ...
         0 1 0 0 0 0 ...
         0 1 0 0 0 0 ...
         0 1 0 0 0 0 ...
         0 1 0 0 0 0 ...
         zeros(1,Action*State*(Time-1)) ...
         zeros(1,AST) ];

row3 = [ 0 0 1 0 0 0 ...
         0 0 1 0 0 0 ...
         0 0 1 0 0 0 ...
         0 0 1 0 0 0 ...
         0 0 1 0 0 0 ...
         zeros(1,Action*State*(Time-1)) ...
         zeros(1,AST) ];

% the rest is redundant (row 4,5,6)

row4 = [ 0 0 0 1 0 0 ...
         0 0 0 1 0 0 ...
         0 0 0 1 0 0 ...
         0 0 0 1 0 0 ...
         0 0 0 1 0 0 ...
         zeros(1,Action*State*(Time-1)) ...
         zeros(1,AST) ];

row5 = [ 0 0 0 0 1 0 ...
         0 0 0 0 1 0 ...
         0 0 0 0 1 0 ...
         0 0 0 0 1 0 ...
         0 0 0 0 1 0 ...
         zeros(1,Action*State*(Time-1)) ...
         zeros(1,AST) ];

row6 = [ 0 0 0 0 0 1 ...
         0 0 0 0 0 1 ...
         0 0 0 0 0 1 ...
         0 0 0 0 0 1 ...
         0 0 0 0 0 1 ...
         zeros(1,Action*State*(Time-1)) ...
         zeros(1,AST) ];

ConstraintSet1 = [row1;row2;row3;row4;row5;row6];
b_ConstraintSet1 = beta';

%ConstraintSet1 = [row1;row2;row3];
%b_ConstraintSet1 = beta(1:3)';

%-----------------INITIAL DISTRIBUTION EQUATIONS END---------------------------------

%--------------------------------------------------------------------------------------------------------

%-------------------OBJECTIVE FUNCTION f STARTS -------------------------------------

% rew(s,a,t) = E[ QALT in [t,t+1) | State=s,Action=a ]
% R(s,t) = E[ remaining lifetime | treatment started in state s at time t ] 
% r_T(s)   = E[ remaining lifetime | State=s,Time=T ]

f_t = @(t) [ rew(1,1,t) rew(2,1,t) rew(3,1,t)   R(4,t-1)         R(5,t-1)     0 ...
             rew(1,2,t) rew(2,2,t) rew(3,2,t)       0                0        0 ...
             rew(1,3,t) rew(2,3,t) rew(3,3,t)       0                0        0 ...  
             rew(1,4,t) rew(2,4,t) rew(3,4,t)       0                0        0 ...
             rew(1,5,t) rew(2,5,t) rew(3,5,t)       0                0        0  ];

for s=1:5
   r_T(s) = R(s,Time);
end

f_T = [ r_T(1) r_T(2) r_T(3) r_T(4) r_T(5) 0 ...
        r_T(1) r_T(2) r_T(3) r_T(4) r_T(5) 0 ...
        r_T(1) r_T(2) r_T(3) r_T(4) r_T(5) 0 ...
        r_T(1) r_T(2) r_T(3) r_T(4) r_T(5) 0 ...
        r_T(1) r_T(2) r_T(3) r_T(4) r_T(5) 0 ];

f =[];

for t=1:Time-1
    f = [f f_t(t)];
end

f= [f f_T zeros(1,AST)];

f = -f; % since the problem is a maximization problem

%-------------------OBJECTIVE FUNCTION f ENDS -------------------------------------

%--------------------------------------------------------------------------------------------------------

%-------------------BUDGET CONSTRAINTS ON EVERY FIVE YEARS START--------------- (Time-1)/5 Constraints

% Medicare Resource-Based Relative Value Scale 2005. Chicago, 3: American Medical Association: 2005

%Bilateral screening mammogram                      86  (70-120) 
%Short interval follow-up mammogram                 78  (63-109) 
%Ultrasound                                         70  (not varied) 
%Mammogram-guided surgical biopsy                  1260 (1026-1758) 
%Ultrasound-guided core needle biopsy               523 (not varied) 
%Stereotactic biopsy                                778 (633-1086) 
%Ultrasound-guided fine needle aspiration           463 (not varied)
%Bilateral screening MRI                           1038 (800-1500) 
%Short interval follow-up MRI                       787 (607-1137) 
%MRI-guided surgical biopsy                        1678 (1293-2425) 
%MRI-guided core needle biopsy                      960 (740-1387) 

% alpha = 12-months inflation rate
alpha= 1;
inflation = (1.03)^(2015-2005);

%  Cost_WAIT  =    0  ;
%  Cost_CBE   =    0  ;
  Cost_MAM     =   inflation*120   ;
  Cost_ULTRA   =   inflation*70    ; 
  Cost_MRI     =   inflation*1500  ;
  Cost_BIO     =   inflation*1026  ;  
  Cost_MAM_MRI = Cost_MAM + Cost_MRI;

C_t = @(t) (alpha^(t-1))*[    0         0               0             0    0    0 ...
                          Cost_MAM      Cost_MAM 	    Cost_MAM      0    0    0 ...
                          Cost_MRI      Cost_MRI 	    Cost_MRI      0    0    0 ...
                          Cost_ULTRA    Cost_ULTRA 	    Cost_ULTRA    0    0    0 ...
                          Cost_MAM_MRI  Cost_MAM_MRI 	Cost_MAM_MRI  0    0    0   ]; 

BIO_t = @(t) (alpha^(t-1))*[    0                 0               0             0    0    0 ...
                            1-specMAM(t)      sensMAM(t)      sensMAM(t)        0    0    0 ...
                            1-specMRI(t)      sensMRI(t)      sensMRI(t)        0    0    0 ...
                            1-specULTRA(t)    sensULTRA(t)    sensULTRA(t)      0    0    0 ...
                            1-specMAM_MRI(t)  sensMAM_MRI(t)  sensMAM_MRI(t)    0    0    0 ]; 

%------------------------

Proper_Budget_Add = [  BUDGET_OF_SCREENING  BUDGET_OF_SCREENING  BUDGET_OF_SCREENING    0    0    0 ...
                       BUDGET_OF_SCREENING  BUDGET_OF_SCREENING  BUDGET_OF_SCREENING    0    0    0 ...
                       BUDGET_OF_SCREENING  BUDGET_OF_SCREENING  BUDGET_OF_SCREENING    0    0    0 ...
                       BUDGET_OF_SCREENING  BUDGET_OF_SCREENING  BUDGET_OF_SCREENING    0    0    0 ...
                       BUDGET_OF_SCREENING  BUDGET_OF_SCREENING  BUDGET_OF_SCREENING    0    0    0 ]; 

%------------------------

 P_Bud_A = [Proper_Budget_Add zeros(1,30*(TI_BC-1))];                        

% N_BC = Number of Budget Constraints 
N_BC = floor( (Time-1)/TI_BC );

% remaining years for the final budget constraint (IF ANY)
Z = (Time-1)-N_BC*TI_BC;

for k=1:N_BC

     BIO = [];
     C   = [];

      for t=(1+(k-1)*TI_BC):(k*TI_BC)

      C = [ C C_t(t) ];
      BIO = [ BIO BIO_t(t) ];

      end

      BIO = Cost_BIO*BIO;

%Budget_Constraint(k,:) = [ zeros(1,Action*State*(k-1)*TI_BC) BIO                  zeros(1,Action*State*(N_BC-k)*TI_BC)  zeros(1,Action*State*(Z+1)) ...
%                           zeros(1,Action*State*(k-1)*TI_BC)  C                   zeros(1,Action*State*(N_BC-k)*TI_BC)  zeros(1,Action*State*(Z+1)) ] ;
Budget_Constraint(k,:) = [ zeros(1,Action*State*(k-1)*TI_BC)  C+BIO-P_Bud_A        zeros(1,Action*State*(N_BC-k)*TI_BC)  zeros(1,Action*State*(Z+1)) ...
                           zeros(1,Action*State*(k-1)*TI_BC)  zeros(1,size(BIO,2)) zeros(1,Action*State*(N_BC-k)*TI_BC)  zeros(1,Action*State*(Z+1)) ] ;

Budget_Level(k,:) = [ zeros(1,Action*State*(k-1)*TI_BC)  C+BIO       zeros(1,Action*State*(N_BC-k)*TI_BC)  zeros(1,Action*State*(Z+1)) ...
                      zeros(1,Action*State*(k-1)*TI_BC)  zeros(1,size(BIO,2)) zeros(1,Action*State*(N_BC-k)*TI_BC)  zeros(1,Action*State*(Z+1)) ] ;

% budget per person for (TI_BC) years
b_C(k) = 0;

end

%..............................................................
% remaining years for the final budget constraint
% Z = (Time-1)-N_BC*TI_BC;

if( Z > 0 )

     BIO = [];
     C   = [];

      for t=(1+N_BC*TI_BC):(Time-1)

      C = [ C C_t(t) ];
      BIO = [ BIO BIO_t(t) ];

      end

      BIO = Cost_BIO*BIO;

  P_Bud_A_5 = 1/2*[Proper_Budget_Add zeros(1,30*(5-1))]; 

      %Budget_Constraint(N_BC+1,:) = [ zeros(1,Action*State*(N_BC)*TI_BC)  BIO                    zeros(1,Action*State*1) ...
      %                                zeros(1,Action*State*(N_BC)*TI_BC)  C                      zeros(1,Action*State*1) ] ;
       Budget_Constraint(N_BC+1,:) = [ zeros(1,Action*State*(N_BC)*TI_BC)  C+BIO-P_Bud_A_5        zeros(1,Action*State*1) ...
                                       zeros(1,Action*State*(N_BC)*TI_BC)  zeros(1,size(BIO,2))   zeros(1,Action*State*1) ] ;

       Budget_Level(N_BC+1,:) = [ zeros(1,Action*State*(N_BC)*TI_BC)         C+BIO           zeros(1,Action*State*1) ...
                                  zeros(1,Action*State*(N_BC)*TI_BC)  zeros(1,size(BIO,2))   zeros(1,Action*State*1) ] ;                                   
                                   
                                   
                                  if ( Z ~= 0)% Z=remaining years for the final budget constraint (IF ANY)
      b_C(N_BC+1) = 0;
                                  end
end
%..................................................................

b_C = b_C';

%-------------------BUDGET CONSTRAINTS ON EVERY FIVE YEARS END-------------- 

%--------------------------------------------------------------------------------------------------------

%-------------------EXACTLY ONE ACTION MUST BE CHOSEN CONSTRAINTS START------------ 51+51+51=153 Constraints

% I(s,a=1,t) + I(s,a=2,t) + I(s,a=3,t) + I(s,a=4,t) + I(s,a=5,t) = 1 for  s=1,2,3 and t=1,2,3,...,20,...,Time

for i = 0:Time-1

  check_1(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [1 0 0 0 0 0 ...
                                                           1 0 0 0 0 0 ...
                                                           1 0 0 0 0 0 ...
                                                           1 0 0 0 0 0 ...
                                                           1 0 0 0 0 0] zeros(1,State*Action*(Time-1-i)) ];


  check_2(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [0 1 0 0 0 0 ...
                                                           0 1 0 0 0 0 ...
                                                           0 1 0 0 0 0 ...
                                                           0 1 0 0 0 0 ...
                                                           0 1 0 0 0 0] zeros(1,State*Action*(Time-1-i)) ];

  check_3(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [0 0 1 0 0 0 ... 
                                                           0 0 1 0 0 0 ...
                                                           0 0 1 0 0 0 ...
                                                           0 0 1 0 0 0 ...
                                                           0 0 1 0 0 0] zeros(1,State*Action*(Time-1-i)) ];
end

% the following are column vectors
b_1 = ones(1,Time)';
b_2 = ones(1,Time)';
b_3 = ones(1,Time)';

%-------------------EXACTLY ONE ACTION MUST BE CHOSEN CONSTRAINTS END------------

%--------------------------------------------------------------------------------------------------------

%---------------------SAME ACTION FOR PARTIALLY OBSERVABLE STATES STARTS---------------- 51*2*5=510 Constraints

% I(s=1,a,t) = I(s=2,a,t) = I(s=3,a,t) same action for all PO states
% two steps: I(s=1,a,t) - I(s=2,a,t) = 0  && I(s=2,a,t) - I(s=3,a,t) = 0

for i = 0:Time-1


  same_1_a(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [1 -1 0 0 0 0 zeros(1,6) zeros(1,6) zeros(1,6) zeros(1,6)] zeros(1,State*Action*(Time-1-i)) ];
  same_1_b(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [0 1 -1 0 0 0 zeros(1,6) zeros(1,6) zeros(1,6) zeros(1,6)] zeros(1,State*Action*(Time-1-i)) ];

  same_2_a(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [zeros(1,6) 1 -1 0 0 0 0 zeros(1,6) zeros(1,6) zeros(1,6)] zeros(1,State*Action*(Time-1-i)) ];
  same_2_b(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [zeros(1,6) 0 1 -1 0 0 0 zeros(1,6) zeros(1,6) zeros(1,6)] zeros(1,State*Action*(Time-1-i)) ];

  same_3_a(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [zeros(1,6) zeros(1,6) 1 -1 0 0 0 0 zeros(1,6) zeros(1,6)] zeros(1,State*Action*(Time-1-i)) ];
  same_3_b(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [zeros(1,6) zeros(1,6) 0 1 -1 0 0 0 zeros(1,6) zeros(1,6)] zeros(1,State*Action*(Time-1-i)) ];

  same_4_a(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [zeros(1,6) zeros(1,6) zeros(1,6) 1 -1 0 0 0 0 zeros(1,6)] zeros(1,State*Action*(Time-1-i)) ];
  same_4_b(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [zeros(1,6) zeros(1,6) zeros(1,6) 0 1 -1 0 0 0 zeros(1,6)] zeros(1,State*Action*(Time-1-i)) ];
  
  same_5_a(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [zeros(1,6) zeros(1,6) zeros(1,6) zeros(1,6) 1 -1 0 0 0 0] zeros(1,State*Action*(Time-1-i)) ];
  same_5_b(i+1,:) = [ zeros(1,AST) zeros(1,State*Action*i) [zeros(1,6) zeros(1,6) zeros(1,6) zeros(1,6) 0 1 -1 0 0 0] zeros(1,State*Action*(Time-1-i)) ];


end

b_same_1 = zeros(1,2*Time)';
b_same_2 = zeros(1,2*Time)';
b_same_3 = zeros(1,2*Time)';
b_same_4 = zeros(1,2*Time)';
b_same_5 = zeros(1,2*Time)';

%---------------------SAME ACTION FOR PARTIALLY OBSERVABLE STATES ENDS------------------ 

%--------------------------------------------------------------------------------------------------------

%------------------------FLOW BALANCE EQUATIONS START----------------------------------- 50*6=300 Constraints

% notation : p(i,s,a,t) = prob(i|s,a,t)

for t=0:Time-3

flow_1(t+1,:)=[  zeros(1,State*Action*t) ...
              -p(1,1,1,t+1)   -p(1,2,1,t+1)  -p(1,3,1,t+1) -p(1,4,1,t+1) -p(1,5,1,t+1) -p(1,6,1,t+1)  ...
              -p(1,1,2,t+1)   -p(1,2,2,t+1)  -p(1,3,2,t+1) -p(1,4,2,t+1) -p(1,5,2,t+1) -p(1,6,2,t+1)  ... 
              -p(1,1,3,t+1)   -p(1,2,3,t+1)  -p(1,3,3,t+1) -p(1,4,3,t+1) -p(1,5,3,t+1) -p(1,6,3,t+1)  ...
              -p(1,1,4,t+1)   -p(1,2,4,t+1)  -p(1,3,4,t+1) -p(1,4,4,t+1) -p(1,5,4,t+1) -p(1,6,4,t+1)  ... 
              -p(1,1,5,t+1)   -p(1,2,5,t+1)  -p(1,3,5,t+1) -p(1,4,5,t+1) -p(1,5,5,t+1) -p(1,6,5,t+1)  ... 
                   1                0              0              0            0             0        ...
                   1                0              0              0            0             0        ...
                   1                0              0              0            0             0        ...
                   1                0              0              0            0             0        ...
                   1                0              0              0            0             0        ...
              zeros(1,State*Action*(Time-2-t)) zeros(1,AST) ];

flow_2(t+1,:)=[  zeros(1,State*Action*t) ...
              -p(2,1,1,t+1)   -p(2,2,1,t+1)  -p(2,3,1,t+1) -p(2,4,1,t+1) -p(2,5,1,t+1) -p(2,6,1,t+1)  ...
              -p(2,1,2,t+1)   -p(2,2,2,t+1)  -p(2,3,2,t+1) -p(2,4,2,t+1) -p(2,5,2,t+1) -p(2,6,2,t+1)  ... 
              -p(2,1,3,t+1)   -p(2,2,3,t+1)  -p(2,3,3,t+1) -p(2,4,3,t+1) -p(2,5,3,t+1) -p(2,6,3,t+1)  ...
              -p(2,1,4,t+1)   -p(2,2,4,t+1)  -p(2,3,4,t+1) -p(2,4,4,t+1) -p(2,5,4,t+1) -p(2,6,4,t+1)  ...
              -p(2,1,5,t+1)   -p(2,2,5,t+1)  -p(2,3,5,t+1) -p(2,4,5,t+1) -p(2,5,5,t+1) -p(2,6,5,t+1)  ... 
                   0                1              0              0            0             0        ...
                   0                1              0              0            0             0        ...
                   0                1              0              0            0             0        ...
                   0                1              0              0            0             0        ...
                   0                1              0              0            0             0        ...
              zeros(1,State*Action*(Time-2-t)) zeros(1,AST) ];

flow_3(t+1,:)=[  zeros(1,State*Action*t) ...
              -p(3,1,1,t+1)   -p(3,2,1,t+1)  -p(3,3,1,t+1) -p(3,4,1,t+1) -p(3,5,1,t+1) -p(3,6,1,t+1)  ...
              -p(3,1,2,t+1)   -p(3,2,2,t+1)  -p(3,3,2,t+1) -p(3,4,2,t+1) -p(3,5,2,t+1) -p(3,6,2,t+1)  ... 
              -p(3,1,3,t+1)   -p(3,2,3,t+1)  -p(3,3,3,t+1) -p(3,4,3,t+1) -p(3,5,3,t+1) -p(3,6,3,t+1)  ...
              -p(3,1,4,t+1)   -p(3,2,4,t+1)  -p(3,3,4,t+1) -p(3,4,4,t+1) -p(3,5,4,t+1) -p(3,6,4,t+1)  ... 
              -p(3,1,5,t+1)   -p(3,2,5,t+1)  -p(3,3,5,t+1) -p(3,4,5,t+1) -p(3,5,5,t+1) -p(3,6,5,t+1)  ...
                   0                0              1              0            0             0        ...
                   0                0              1              0            0             0        ...
                   0                0              1              0            0             0        ...
                   0                0              1              0            0             0        ...
                   0                0              1              0            0             0        ...
              zeros(1,State*Action*(Time-2-t)) zeros(1,AST) ];

flow_4(t+1,:)=[  zeros(1,State*Action*t) ...
              -p(4,1,1,t+1)   -p(4,2,1,t+1)  -p(4,3,1,t+1) -p(4,4,1,t+1) -p(4,5,1,t+1) -p(4,6,1,t+1)  ...
              -p(4,1,2,t+1)   -p(4,2,2,t+1)  -p(4,3,2,t+1) -p(4,4,2,t+1) -p(4,5,2,t+1) -p(4,6,2,t+1)  ... 
              -p(4,1,3,t+1)   -p(4,2,3,t+1)  -p(4,3,3,t+1) -p(4,4,3,t+1) -p(4,5,3,t+1) -p(4,6,3,t+1)  ...
              -p(4,1,4,t+1)   -p(4,2,4,t+1)  -p(4,3,4,t+1) -p(4,4,4,t+1) -p(4,5,4,t+1) -p(4,6,4,t+1)  ... 
              -p(4,1,5,t+1)   -p(4,2,5,t+1)  -p(4,3,5,t+1) -p(4,4,5,t+1) -p(4,5,5,t+1) -p(4,6,5,t+1)  ...
                   0                0              0              1            0             0        ...
                   0                0              0              1            0             0        ...
                   0                0              0              1            0             0        ...
                   0                0              0              1            0             0        ...
                   0                0              0              1            0             0        ...
              zeros(1,State*Action*(Time-2-t)) zeros(1,AST) ];

flow_5(t+1,:)=[  zeros(1,State*Action*t) ...
              -p(5,1,1,t+1)   -p(5,2,1,t+1)  -p(5,3,1,t+1) -p(5,4,1,t+1) -p(5,5,1,t+1) -p(5,6,1,t+1)  ...
              -p(5,1,2,t+1)   -p(5,2,2,t+1)  -p(5,3,2,t+1) -p(5,4,2,t+1) -p(5,5,2,t+1) -p(5,6,2,t+1)  ... 
              -p(5,1,3,t+1)   -p(5,2,3,t+1)  -p(5,3,3,t+1) -p(5,4,3,t+1) -p(5,5,3,t+1) -p(5,6,3,t+1)  ...
              -p(5,1,4,t+1)   -p(5,2,4,t+1)  -p(5,3,4,t+1) -p(5,4,4,t+1) -p(5,5,4,t+1) -p(5,6,4,t+1)  ...
              -p(5,1,5,t+1)   -p(5,2,5,t+1)  -p(5,3,5,t+1) -p(5,4,5,t+1) -p(5,5,5,t+1) -p(5,6,5,t+1)  ... 
                   0                0              0              0            1             0        ...
                   0                0              0              0            1             0        ...
                   0                0              0              0            1             0        ...
                   0                0              0              0            1             0        ...
                   0                0              0              0            1             0        ...
              zeros(1,State*Action*(Time-2-t)) zeros(1,AST) ];

flow_6(t+1,:)=[  zeros(1,State*Action*t) ...
              -p(6,1,1,t+1)   -p(6,2,1,t+1)  -p(6,3,1,t+1) -p(6,4,1,t+1) -p(6,5,1,t+1) -p(6,6,1,t+1)  ...
              -p(6,1,2,t+1)   -p(6,2,2,t+1)  -p(6,3,2,t+1) -p(6,4,2,t+1) -p(6,5,2,t+1) -p(6,6,2,t+1)  ... 
              -p(6,1,3,t+1)   -p(6,2,3,t+1)  -p(6,3,3,t+1) -p(6,4,3,t+1) -p(6,5,3,t+1) -p(6,6,3,t+1)  ...
              -p(6,1,4,t+1)   -p(6,2,4,t+1)  -p(6,3,4,t+1) -p(6,4,4,t+1) -p(6,5,4,t+1) -p(6,6,4,t+1)  ... 
              -p(6,1,5,t+1)   -p(6,2,5,t+1)  -p(6,3,5,t+1) -p(6,4,5,t+1) -p(6,5,5,t+1) -p(6,6,5,t+1)  ...
                   0                0              0              0            0             1        ...
                   0                0              0              0            0             1        ...
                   0                0              0              0            0             1        ...
                   0                0              0              0            0             1        ...
                   0                0              0              0            0             1        ...
              zeros(1,State*Action*(Time-2-t)) zeros(1,AST) ];



end


flow_1(Time-1,:)=[  zeros(1,State*Action*(Time-2)) ...
              -p(1,1,1,Time-1)   -p(1,2,1,Time-1)  -p(1,3,1,Time-1) -p(1,4,1,Time-1) -p(1,5,1,Time-1) -p(1,6,1,Time-1)  ...
              -p(1,1,2,Time-1)   -p(1,2,2,Time-1)  -p(1,3,2,Time-1) -p(1,4,2,Time-1) -p(1,5,2,Time-1) -p(1,6,2,Time-1)  ... 
              -p(1,1,3,Time-1)   -p(1,2,3,Time-1)  -p(1,3,3,Time-1) -p(1,4,3,Time-1) -p(1,5,3,Time-1) -p(1,6,3,Time-1)  ...
              -p(1,1,4,Time-1)   -p(1,2,4,Time-1)  -p(1,3,4,Time-1) -p(1,4,4,Time-1) -p(1,5,4,Time-1) -p(1,6,4,Time-1)  ... 
              -p(1,1,5,Time-1)   -p(1,2,5,Time-1)  -p(1,3,5,Time-1) -p(1,4,5,Time-1) -p(1,5,5,Time-1) -p(1,6,5,Time-1)  ...
                    1                    0               0              0              0              0        ...
                    1                    0               0              0              0              0        ...
                    1                    0               0              0              0              0        ...
                    1                    0               0              0              0              0        ...
                    1                    0               0              0              0              0        ...
              zeros(1,AST) ];

flow_2(Time-1,:)=[  zeros(1,State*Action*(Time-2)) ...
              -p(2,1,1,Time-1)   -p(2,2,1,Time-1)  -p(2,3,1,Time-1) -p(2,4,1,Time-1) -p(2,5,1,Time-1) -p(2,6,1,Time-1)  ...
              -p(2,1,2,Time-1)   -p(2,2,2,Time-1)  -p(2,3,2,Time-1) -p(2,4,2,Time-1) -p(2,5,2,Time-1) -p(2,6,2,Time-1)  ... 
              -p(2,1,3,Time-1)   -p(2,2,3,Time-1)  -p(2,3,3,Time-1) -p(2,4,3,Time-1) -p(2,5,3,Time-1) -p(2,6,3,Time-1)  ...
              -p(2,1,4,Time-1)   -p(2,2,4,Time-1)  -p(2,3,4,Time-1) -p(2,4,4,Time-1) -p(2,5,4,Time-1) -p(2,6,4,Time-1)  ... 
              -p(2,1,5,Time-1)   -p(2,2,5,Time-1)  -p(2,3,5,Time-1) -p(2,4,5,Time-1) -p(2,5,5,Time-1) -p(2,6,5,Time-1)  ...
                    0                 1               0              0              0              0        ...
                    0                 1               0              0              0              0        ...
                    0                 1               0              0              0              0        ...
                    0                 1               0              0              0              0        ...
                    0                 1               0              0              0              0        ...
              zeros(1,AST) ];

flow_3(Time-1,:)=[  zeros(1,State*Action*(Time-2)) ...
              -p(3,1,1,Time-1)   -p(3,2,1,Time-1)  -p(3,3,1,Time-1) -p(3,4,1,Time-1) -p(3,5,1,Time-1) -p(3,6,1,Time-1)  ...
              -p(3,1,2,Time-1)   -p(3,2,2,Time-1)  -p(3,3,2,Time-1) -p(3,4,2,Time-1) -p(3,5,2,Time-1) -p(3,6,2,Time-1)  ... 
              -p(3,1,3,Time-1)   -p(3,2,3,Time-1)  -p(3,3,3,Time-1) -p(3,4,3,Time-1) -p(3,5,3,Time-1) -p(3,6,3,Time-1)  ...
              -p(3,1,4,Time-1)   -p(3,2,4,Time-1)  -p(3,3,4,Time-1) -p(3,4,4,Time-1) -p(3,5,4,Time-1) -p(3,6,4,Time-1)  ... 
              -p(3,1,5,Time-1)   -p(3,2,5,Time-1)  -p(3,3,5,Time-1) -p(3,4,5,Time-1) -p(3,5,5,Time-1) -p(3,6,5,Time-1)  ...
                    0                 0               1              0              0              0        ...
                    0                 0               1              0              0              0        ...
                    0                 0               1              0              0              0        ...
                    0                 0               1              0              0              0        ...
                    0                 0               1              0              0              0        ...
              zeros(1,AST) ];

flow_4(Time-1,:)=[  zeros(1,State*Action*(Time-2)) ...
              -p(4,1,1,Time-1)   -p(4,2,1,Time-1)  -p(4,3,1,Time-1) -p(4,4,1,Time-1) -p(4,5,1,Time-1) -p(4,6,1,Time-1)  ...
              -p(4,1,2,Time-1)   -p(4,2,2,Time-1)  -p(4,3,2,Time-1) -p(4,4,2,Time-1) -p(4,5,2,Time-1) -p(4,6,2,Time-1)  ... 
              -p(4,1,3,Time-1)   -p(4,2,3,Time-1)  -p(4,3,3,Time-1) -p(4,4,3,Time-1) -p(4,5,3,Time-1) -p(4,6,3,Time-1)  ...
              -p(4,1,4,Time-1)   -p(4,2,4,Time-1)  -p(4,3,4,Time-1) -p(4,4,4,Time-1) -p(4,5,4,Time-1) -p(4,6,4,Time-1)  ... 
              -p(4,1,5,Time-1)   -p(4,2,5,Time-1)  -p(4,3,5,Time-1) -p(4,4,5,Time-1) -p(4,5,5,Time-1) -p(4,6,5,Time-1)  ...
                    0                     0               0              1              0              0        ...
                    0                     0               0              1              0              0        ...
                    0                     0               0              1              0              0        ...
                    0                     0               0              1              0              0        ...
                    0                     0               0              1              0              0        ...
              zeros(1,AST) ];

flow_5(Time-1,:)=[  zeros(1,State*Action*(Time-2)) ...
              -p(5,1,1,Time-1)   -p(5,2,1,Time-1)  -p(5,3,1,Time-1) -p(5,4,1,Time-1) -p(5,5,1,Time-1) -p(5,6,1,Time-1)  ...
              -p(5,1,2,Time-1)   -p(5,2,2,Time-1)  -p(5,3,2,Time-1) -p(5,4,2,Time-1) -p(5,5,2,Time-1) -p(5,6,2,Time-1)  ... 
              -p(5,1,3,Time-1)   -p(5,2,3,Time-1)  -p(5,3,3,Time-1) -p(5,4,3,Time-1) -p(5,5,3,Time-1) -p(5,6,3,Time-1)  ...
              -p(5,1,4,Time-1)   -p(5,2,4,Time-1)  -p(5,3,4,Time-1) -p(5,4,4,Time-1) -p(5,5,4,Time-1) -p(5,6,4,Time-1)  ... 
              -p(5,1,5,Time-1)   -p(5,2,5,Time-1)  -p(5,3,5,Time-1) -p(5,4,5,Time-1) -p(5,5,5,Time-1) -p(5,6,5,Time-1)  ...
                    0                 0               0              0              1              0        ...
                    0                 0               0              0              1              0        ...
                    0                 0               0              0              1              0        ...
                    0                 0               0              0              1              0        ...
                    0                 0               0              0              1              0        ...
              zeros(1,AST) ];

flow_6(Time-1,:)=[  zeros(1,State*Action*(Time-2)) ...
              -p(6,1,1,Time-1)   -p(6,2,1,Time-1)  -p(6,3,1,Time-1) -p(6,4,1,Time-1) -p(6,5,1,Time-1) -p(6,6,1,Time-1)  ...
              -p(6,1,2,Time-1)   -p(6,2,2,Time-1)  -p(6,3,2,Time-1) -p(6,4,2,Time-1) -p(6,5,2,Time-1) -p(6,6,2,Time-1)  ... 
              -p(6,1,3,Time-1)   -p(6,2,3,Time-1)  -p(6,3,3,Time-1) -p(6,4,3,Time-1) -p(6,5,3,Time-1) -p(6,6,3,Time-1)  ...
              -p(6,1,4,Time-1)   -p(6,2,4,Time-1)  -p(6,3,4,Time-1) -p(6,4,4,Time-1) -p(6,5,4,Time-1) -p(6,6,4,Time-1)  ... 
              -p(6,1,5,Time-1)   -p(6,2,5,Time-1)  -p(6,3,5,Time-1) -p(6,4,5,Time-1) -p(6,5,5,Time-1) -p(6,6,5,Time-1)  ...
                    0                 	0              	 0              0              0              1        ...
                    0                 	0              	 0              0              0              1        ...
                    0                 	0              	 0              0              0              1        ...
                    0                 	0              	 0              0              0              1        ...
                    0                 	0              	 0              0              0              1        ...
              zeros(1,AST) ];


b_flow_1 = zeros(1,Time-1)';
b_flow_2 = zeros(1,Time-1)';
b_flow_3 = zeros(1,Time-1)';
b_flow_4 = zeros(1,Time-1)';
b_flow_5 = zeros(1,Time-1)';
b_flow_6 = zeros(1,Time-1)';

%------------------------FLOW BALANCE EQUATIONS END-------------------------------------

%--------------------------------------------------------------------------------------------------------

%--------------UPPER AND LOWER BOUNDS START---------------------

lb = [ zeros(1,AST) repmat( [0 0 0 1 1 1 ...
                             0 0 0 0 0 0 ...
                             0 0 0 0 0 0 ...
                             0 0 0 0 0 0 ...
                             0 0 0 0 0 0],1,Time) ];

% in order to ensure WAIT decision for s=4,5,6 set lb=1 for the corresponding binary variables
% in order to ensure WAIT decision for s=4,5,6 set ub=0 for the other binary variables

ub = [ ones(1,AST) repmat(  [1 1 1 1 1 1 ...
                             1 1 1 0 0 0 ...
                             1 1 1 0 0 0 ...
                             1 1 1 0 0 0 ...
                             1 1 1 0 0 0],1,Time)];


% X(s=1,a=1,t=1) X(s=2,a=1,t=1) X(s=3,a=1,t=1) X(s=4,a=1,t=1) X(s=5,a=1,t=1) X(s=6,a=1,t=1)
% X(s=1,a=2,t=1) X(s=2,a=2,t=1) X(s=3,a=2,t=1) X(s=4,a=2,t=1) X(s=5,a=2,t=1) X(s=6,a=2,t=1)
% X(s=1,a=3,t=1) X(s=2,a=3,t=1) X(s=3,a=3,t=1) X(s=4,a=3,t=1) X(s=5,a=3,t=1) X(s=6,a=3,t=1)
% X(s=1,a=4,t=1) X(s=2,a=4,t=1) X(s=3,a=4,t=1) X(s=4,a=4,t=1) X(s=5,a=4,t=1) X(s=6,a=4,t=1)

% lower bound for binary variables for each t
%     0                 0               0           1                1              1
%     0                 0               0           0                0              0
%     0                 0               0           0                0              0
%     0                 0               0           0                0              0
%     0                 0               0           0                0              0


% upper bound for binary variables for each t
%     1                 1               1           1                1              1
%     1                 1               1           0                0              0
%     1                 1               1           0                0              0
%     1                 1               1           0                0              0
%     1                 1               1           0                0              0      

%--------------UPPER AND LOWER BOUNDS END-----------------------

%--------------------------------------------------------------------------------------------------------

%--------------MILP FORMULATION ------------------------------

ConstraintSet2 = [ check_1 ; check_2 ; check_3 ]; 

ConstraintSet3 = [ same_1_a ;  same_1_b ; same_2_a ; same_2_b ; same_3_a ; same_3_b ; same_4_a ; same_4_b ; same_5_a ; same_5_b ];

ConstraintSet4 = [ flow_1 ; flow_2 ; flow_3 ; flow_4 ; flow_5 ; flow_6 ];


b_ConstraintSet2 = [ b_1 ; b_2 ; b_3 ]; 

b_ConstraintSet3 = [ b_same_1 ; b_same_2 ; b_same_3 ; b_same_4 ; b_same_5 ];

b_ConstraintSet4 = [ b_flow_1 ; b_flow_2 ; b_flow_3 ; b_flow_4 ; b_flow_5 ; b_flow_6 ];


A_leq = [ cons;Budget_Constraint  ]; 
b_leq = [b_cons; b_C ];

A_eq = [ ConstraintSet1 ; ConstraintSet2 ; ConstraintSet3 ; ConstraintSet4 ]; 
b_eq = [ b_ConstraintSet1 ; b_ConstraintSet2 ; b_ConstraintSet3 ; b_ConstraintSet4 ]; 


%-----------------------------------------------------------%
%---------- ENFORCING REGULAR POLICIES STARTS HERE----------%

% ADDITIONAL VARIABLES FOR REGULAR POLICIES
N_OPTIONS=4; %( 1 action in every 1,2,5,10 years)
 for m = 1 : (N_BC+1)*N_OPTIONS
    ctype(2*AST+m)  = char(66);
        f(2*AST+m)  = 0;
        lb(2*AST+m) = 0;
        ub(2*AST+m) = 1;
            if( m == (N_BC+1)*4 )
                     ub(2*AST+m) = 0;
            end
 end
 
 % CHOOSE EXACTLY ONE OPTION
   for i=1: N_BC+1
   option(i,:) = [zeros(1,2*AST) zeros(1,(i-1)*N_OPTIONS) ones(1,N_OPTIONS) zeros(1,(N_BC+1-i)*N_OPTIONS)];
   end
 

   A_eq = [ A_eq zeros(size(A_eq,1),(N_BC+1)*N_OPTIONS) ];
   A_eq = [ A_eq ; option ];
   b_eq = [ b_eq ; ones(N_BC+1,1) ];


 % action in every ? year (?: y=1 z=2 theta=5 mu=10)

   S_T = State*Action;

   WAIT = [ 1 0 0 0 0 0 ...
            0 0 0 0 0 0 ...
            0 0 0 0 0 0 ...
            0 0 0 0 0 0 ...
            0 0 0 0 0 0];

   MAM = [  0 0 0 0 0 0 ...
            1 0 0 0 0 0 ...
            0 0 0 0 0 0 ...
            0 0 0 0 0 0 ...
            0 0 0 0 0 0]; 		

   MRI = [  0 0 0 0 0 0 ...
            0 0 0 0 0 0 ...
            1 0 0 0 0 0 ...
            0 0 0 0 0 0 ...
            0 0 0 0 0 0];

   ULTRA = [  0 0 0 0 0 0 ...
              0 0 0 0 0 0 ...
              0 0 0 0 0 0 ...
              1 0 0 0 0 0 ...
              0 0 0 0 0 0]; 	

   MAM_MRI = [  0 0 0 0 0 0 ...
                0 0 0 0 0 0 ...
                0 0 0 0 0 0 ...
                0 0 0 0 0 0 ...
                1 0 0 0 0 0];					         
   
   for i= 1 : N_BC
  
   % less than equal to 1 constraints    (+1-1 +variable<=1 && -1+1+variable <=1)
   % regular_t1_t2_action_variable : 1(s=HEALTHY,a=action,t=t1) - 1(s=HEALTHY,a=action,t=t2) <= 1-variable
   %so if variable is chosen ( variable=1 ), those actions are the same

%THETA = 1 ACTION IN EVERY 5 YEARS

   regular_1_6_W_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  WAIT zeros(1,S_T*4) -WAIT zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ]; 

   regular_6_1_W_theta(i,:)    = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -WAIT zeros(1,S_T*4) WAIT zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ]; 

   regular_1_6_MAM_theta(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MAM zeros(1,S_T*4) -MAM zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ]; 

   regular_6_1_MAM_theta(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1)) -MAM zeros(1,S_T*4) MAM zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ]; 
   
   regular_1_6_MRI_theta(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1)) MRI zeros(1,S_T*4) -MRI zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ]; 

   regular_6_1_MRI_theta(i,:)   = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1)) -MRI zeros(1,S_T*4) MRI zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];   
   
   regular_1_6_U_theta(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1)) ULTRA zeros(1,S_T*4) -ULTRA zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ]; 

   regular_6_1_U_theta(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1)) -ULTRA zeros(1,S_T*4) ULTRA zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ]; 
   
   regular_1_6_MAM_MRI_theta(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1)) MAM_MRI zeros(1,S_T*4) -MAM_MRI zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ]; 

   regular_6_1_MAM_MRI_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1)) -MAM_MRI zeros(1,S_T*4) MAM_MRI zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ]; 

%(+1-1 +y<=1 && -1+1+y<=1) DO FOR ALL ACTIONS (NOT ONLY FOR W=WAIT) if variable=1, actions are same.
%Y=ONE ACTION IN EVERY 1 YEAR

    regular_1_2_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  WAIT -WAIT zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_1_2_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MAM -MAM zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_1_2_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MRI -MRI zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_1_2_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  ULTRA -ULTRA zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_1_2_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MAM_MRI -MAM_MRI zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];


regular_2_1_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -WAIT WAIT zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_2_1_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -MAM MAM zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_2_1_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -MRI MRI zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_2_1_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -ULTRA ULTRA zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_2_1_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -MAM_MRI MAM_MRI zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    
    regular_1_3_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  WAIT zeros(1,S_T) -WAIT zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_1_3_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MAM zeros(1,S_T) -MAM zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_1_3_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MRI zeros(1,S_T) -MRI zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_1_3_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_1_3_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_3_1_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -WAIT zeros(1,S_T) WAIT zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_3_1_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -MAM zeros(1,S_T) MAM zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_3_1_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -MRI zeros(1,S_T) MRI zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_3_1_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_3_1_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];


    regular_2_4_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) WAIT zeros(1,S_T) -WAIT zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_2_4_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) MAM zeros(1,S_T) -MAM zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_2_4_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) MRI zeros(1,S_T) -MRI zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_2_4_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_2_4_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_4_2_W_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) -WAIT zeros(1,S_T) WAIT zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_4_2_MAM_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) -MAM zeros(1,S_T) MAM zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_4_2_MRI_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) -MRI zeros(1,S_T) MRI zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_4_2_U_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_4_2_MAM_MRI_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T) -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];


    regular_3_5_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) WAIT zeros(1,S_T) -WAIT zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_5_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) MAM zeros(1,S_T) -MAM zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_5_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) MRI zeros(1,S_T) -MRI zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_5_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_5_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_5_3_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -WAIT zeros(1,S_T) WAIT zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_5_3_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -MAM zeros(1,S_T) MAM zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_5_3_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -MRI zeros(1,S_T) MRI zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_5_3_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_5_3_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_4_6_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) WAIT zeros(1,S_T) -WAIT zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_4_6_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) MAM zeros(1,S_T) -MAM zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_4_6_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) MRI zeros(1,S_T) -MRI zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_4_6_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_4_6_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_6_4_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) -WAIT zeros(1,S_T) WAIT zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_6_4_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) -MAM zeros(1,S_T) MAM zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_6_4_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) -MRI zeros(1,S_T) MRI zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_6_4_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_6_4_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3) -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_5_7_W_y(i,:)   = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) WAIT zeros(1,S_T) -WAIT zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_7_MAM_y(i,:)   = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) MAM zeros(1,S_T) -MAM zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_7_MRI_y(i,:)   = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) MRI zeros(1,S_T) -MRI zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_7_U_y(i,:)   = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_7_MAM_MRI_y(i,:)   = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_7_5_W_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -WAIT zeros(1,S_T) WAIT zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_7_5_MAM_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -MAM zeros(1,S_T) MAM zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_7_5_MRI_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -MRI zeros(1,S_T) MRI zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_7_5_U_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_7_5_MAM_MRI_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_6_8_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) WAIT zeros(1,S_T) -WAIT zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_6_8_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) MAM zeros(1,S_T) -MAM zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_6_8_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) MRI zeros(1,S_T) -MRI zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_6_8_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_6_8_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_8_6_W_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) -WAIT zeros(1,S_T) WAIT zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_8_6_MAM_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) -MAM zeros(1,S_T) MAM zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_8_6_MRI_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) -MRI zeros(1,S_T) MRI zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_8_6_U_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_8_6_MAM_MRI_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5) -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_7_9_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) WAIT zeros(1,S_T) -WAIT zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_9_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) MAM zeros(1,S_T) -MAM zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_9_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) MRI zeros(1,S_T) -MRI zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_9_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_9_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_9_7_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -WAIT zeros(1,S_T) WAIT zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_9_7_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -MAM zeros(1,S_T) MAM zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_9_7_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -MRI zeros(1,S_T) MRI zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_9_7_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_9_7_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_8_10_W_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) WAIT zeros(1,S_T) -WAIT   ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_8_10_MAM_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) MAM zeros(1,S_T) -MAM   ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_8_10_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) MRI zeros(1,S_T) -MRI   ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_8_10_U_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) ULTRA zeros(1,S_T) -ULTRA   ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_8_10_MAM_MRI_y(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) MAM_MRI zeros(1,S_T) -MAM_MRI   ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

regular_10_8_W_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) -WAIT zeros(1,S_T) WAIT    ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_10_8_MAM_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) -MAM zeros(1,S_T) MAM    ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_10_8_MRI_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) -MRI zeros(1,S_T) MRI    ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_10_8_U_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) -ULTRA zeros(1,S_T) ULTRA    ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
regular_10_8_MAM_MRI_y(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7) -MAM_MRI zeros(1,S_T) MAM_MRI    ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [1 0 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

%Z= ACTION IN EVERY 2 YEARS
    regular_1_3_W_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  WAIT zeros(1,S_T) -WAIT zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_1_3_MAM_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MAM zeros(1,S_T) -MAM zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_1_3_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MRI zeros(1,S_T) -MRI zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_1_3_U_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_1_3_MAM_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];


    regular_3_1_W_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -WAIT zeros(1,S_T) WAIT zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_1_MAM_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -MAM zeros(1,S_T) MAM zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_1_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -MRI zeros(1,S_T) MRI zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_1_U_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_1_MAM_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
   
    regular_3_5_W_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) WAIT zeros(1,S_T) -WAIT zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_5_MAM_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) MAM zeros(1,S_T) -MAM zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_5_MRI_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) MRI zeros(1,S_T) -MRI zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_5_U_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_3_5_MAM_MRI_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
   
    regular_5_3_W_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -WAIT zeros(1,S_T) WAIT zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_3_MAM_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -MAM zeros(1,S_T) MAM zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_3_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -MRI zeros(1,S_T) MRI zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_3_U_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_3_MAM_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2) -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    
    regular_5_7_W_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) WAIT zeros(1,S_T) -WAIT zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_7_MAM_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) MAM zeros(1,S_T) -MAM zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_7_MRI_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) MRI zeros(1,S_T) -MRI zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_7_U_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_5_7_MAM_MRI_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_7_5_W_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -WAIT zeros(1,S_T) WAIT zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_5_MAM_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -MAM zeros(1,S_T) MAM zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_5_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -MRI zeros(1,S_T) MRI zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_5_U_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_5_MAM_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4) -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_7_9_W_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) WAIT zeros(1,S_T) -WAIT zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_9_MAM_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) MAM zeros(1,S_T) -MAM zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_9_MRI_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) MRI zeros(1,S_T) -MRI zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_9_U_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) ULTRA zeros(1,S_T) -ULTRA zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_7_9_MAM_MRI_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) MAM_MRI zeros(1,S_T) -MAM_MRI zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

    regular_9_7_W_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -WAIT zeros(1,S_T) WAIT zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_9_7_MAM_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -MAM zeros(1,S_T) MAM zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_9_7_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -MRI zeros(1,S_T) MRI zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_9_7_U_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -ULTRA zeros(1,S_T) ULTRA zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];
    regular_9_7_MAM_MRI_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6) -MAM_MRI zeros(1,S_T) MAM_MRI zeros(1,S_T*1) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

%MU=1 ACTION IN EVERY 10 YEARS
    % 1 + mu <= 1
    % so if mu is chosen WAIT in the first period =0 (an action is chosen other than WAIT)

   regular_1_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))    WAIT  zeros(1,S_T*9) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];


   % less than equal to zero constraints (-1+variable <=0) if variable=1, WAIT=1
   % regular_t_WAIT_variable :  variable <= 1(s=HEALTHY,a=WAIT,time=t) 
   % so variable is chosen (variable=1), the chosen action @ time t is to WAIT

   regular_2_WAIT_z(i,:)  = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T)  -WAIT  zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_4_WAIT_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3)  -WAIT  zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_6_WAIT_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5)  -WAIT  zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_8_WAIT_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7)  -WAIT  zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_10_WAIT_z(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*9)  -WAIT   ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 1 0 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_2_WAIT_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T)  -WAIT  zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_3_WAIT_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2)  -WAIT  zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_4_WAIT_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3)  -WAIT  zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_5_WAIT_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4)  -WAIT  zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_7_WAIT_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6)  -WAIT  zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_8_WAIT_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7)  -WAIT  zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_9_WAIT_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*8)  -WAIT  zeros(1,S_T) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_10_WAIT_theta(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*9)  -WAIT   ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 1 0]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_2_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T)  -WAIT  zeros(1,S_T*8) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_3_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*2)  -WAIT  zeros(1,S_T*7) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_4_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*3)  -WAIT  zeros(1,S_T*6) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_5_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*4)  -WAIT  zeros(1,S_T*5) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_6_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*5)  -WAIT  zeros(1,S_T*4) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_7_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*6)  -WAIT  zeros(1,S_T*3) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_8_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*7)  -WAIT  zeros(1,S_T*2) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_9_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*8)  -WAIT  zeros(1,S_T) ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];

   regular_10_WAIT_mu(i,:) = [ zeros(1,AST) zeros(1,S_T*TI_BC*(i-1))  zeros(1,S_T*9)  -WAIT   ...
                           zeros(1,S_T*TI_BC*(N_BC-i)) zeros(1,S_T*(Z+1))  zeros(1,N_OPTIONS*(i-1)) [0 0 0 1]  ...
                           zeros(1,N_OPTIONS*(N_BC-i)) [0 0 0 0] ];


   end

%---------- "REGULAR POLICIES FOR LAST 5 YEARS" STARTS HERE----------------------------------
last_five_2_W_theta = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1)  -WAIT  zeros(1,S_T*3) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 0 1 0] ];
last_five_3_W_theta = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2)  -WAIT  zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 0 1 0] ];
last_five_4_W_theta = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*3)  -WAIT  zeros(1,S_T*1) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 0 1 0] ];
last_five_5_W_theta = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*4)  -WAIT  zeros(1,S_T*0) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 0 1 0] ];

last_five_2_W_z = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1)  -WAIT  zeros(1,S_T*3) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_4_W_z = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*3)  -WAIT  zeros(1,S_T*1) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
%----------
last_five_1_W_theta = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  WAIT  zeros(1,S_T*4) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 0 1 0] ];

%---------


last_five_1_3_W_z = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  WAIT  zeros(1,S_T*1) -WAIT zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_1_3_MAM_z = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  MAM  zeros(1,S_T*1) -MAM zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_1_3_MRI_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  MRI  zeros(1,S_T*1) -MRI zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_1_3_U_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  ULTRA  zeros(1,S_T*1) -ULTRA zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_1_3_MAM_MRI_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  MAM_MRI  zeros(1,S_T*1) -MAM_MRI zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];

last_five_3_1_W_z = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  -WAIT  zeros(1,S_T*1) WAIT zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_3_1_MAM_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  -MAM  zeros(1,S_T*1) MAM zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_3_1_MRI_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  -MRI  zeros(1,S_T*1)  MRI zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_3_1_U_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  -ULTRA zeros(1,S_T*1) ULTRA zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_3_1_MAM_MRI_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  -MAM_MRI  zeros(1,S_T*1) MAM_MRI zeros(1,S_T*2) ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];

last_five_3_5_W_z = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) WAIT  zeros(1,S_T*1) -WAIT  ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_3_5_MAM_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) MAM  zeros(1,S_T*1) -MAM  ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_3_5_MRI_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) MRI  zeros(1,S_T*1) -MRI  ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_3_5_U_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) ULTRA  zeros(1,S_T*1) -ULTRA  ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_3_5_MAM_MRI_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) MAM_MRI  zeros(1,S_T*1) -MAM_MRI  ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];

last_five_5_3_W_z = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -WAIT  zeros(1,S_T*1) WAIT  ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_5_3_MAM_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -MAM  zeros(1,S_T*1) MAM  ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_5_3_MRI_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -MRI  zeros(1,S_T*1) MRI ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_5_3_U_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -ULTRA  zeros(1,S_T*1) ULTRA  ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];
last_five_5_3_MAM_MRI_z= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -MAM_MRI  zeros(1,S_T*1) MAM_MRI  ...
                        zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [0 1 0 0] ];

          last_five_1_2_W_y = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) WAIT   -WAIT zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
          last_five_1_2_MAM_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) MAM   -MAM zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
          last_five_1_2_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) MRI   -MRI zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
          last_five_1_2_U_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) ULTRA   -ULTRA zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
          last_five_1_2_MAM_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) MAM_MRI   -MAM_MRI zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];

              last_five_2_1_W_y = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -WAIT   WAIT zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
              last_five_2_1_MAM_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -MAM   MAM zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
              last_five_2_1_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -MRI   MRI zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
              last_five_2_1_U_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -ULTRA   ULTRA zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
              last_five_2_1_MAM_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -MAM_MRI   MAM_MRI zeros(1,S_T*3) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];

last_five_1_3_W_y = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) WAIT  zeros(1,S_T*1) -WAIT zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_1_3_MAM_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) MAM  zeros(1,S_T*1) -MAM zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_1_3_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) MRI  zeros(1,S_T*1) -MRI zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_1_3_U_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) ULTRA zeros(1,S_T*1) -ULTRA zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_1_3_MAM_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) MAM_MRI  zeros(1,S_T*1) -MAM_MRI zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];

	last_five_3_1_W_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -WAIT  zeros(1,S_T*1) WAIT zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
	last_five_3_1_MAM_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -MAM  zeros(1,S_T*1) MAM zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
	last_five_3_1_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -MRI  zeros(1,S_T*1) MRI zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
	last_five_3_1_U_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -ULTRA  zeros(1,S_T*1) ULTRA zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
	last_five_3_1_MAM_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*0) -MAM_MRI zeros(1,S_T*1) MAM_MRI zeros(1,S_T*2) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];

last_five_2_4_W_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) WAIT  zeros(1,S_T*1) -WAIT zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_2_4_MAM_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) MAM  zeros(1,S_T*1) -MAM zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_2_4_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) MRI  zeros(1,S_T*1) -MRI zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_2_4_U_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) ULTRA  zeros(1,S_T*1) -ULTRA zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_2_4_MAM_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) MAM_MRI  zeros(1,S_T*1) -MAM_MRI zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];

	last_five_4_2_W_y = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) -WAIT  zeros(1,S_T*1) WAIT zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
	last_five_4_2_MAM_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) -MAM  zeros(1,S_T*1) MAM zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
	last_five_4_2_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) -MRI  zeros(1,S_T*1) MRI zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
	last_five_4_2_U_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) -ULTRA  zeros(1,S_T*1) ULTRA zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
	last_five_4_2_MAM_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*1) -MAM_MRI  zeros(1,S_T*1) MAM_MRI zeros(1,S_T*1) ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];

last_five_3_5_W_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) WAIT  zeros(1,S_T*1) -WAIT  ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_3_5_MAM_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) MAM  zeros(1,S_T*1) -MAM  ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_3_5_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) MRI  zeros(1,S_T*1) -MRI  ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_3_5_U_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) ULTRA zeros(1,S_T*1) -ULTRA ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
last_five_3_5_MAM_MRI_y= [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) MAM_MRI  zeros(1,S_T*1) -MAM_MRI  ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];

                last_five_5_3_W_y = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -WAIT  zeros(1,S_T*1) WAIT  ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
                last_five_5_3_MAM_y = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -MAM  zeros(1,S_T*1) MAM  ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
                last_five_5_3_MRI_y = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -MRI  zeros(1,S_T*1) MRI  ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
                last_five_5_3_U_y = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -ULTRA  zeros(1,S_T*1) ULTRA  ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];
                last_five_5_3_MAM_MRI_y = [ zeros(1,AST) zeros(1,S_T*TI_BC*N_BC)  zeros(1,S_T*2) -MAM_MRI  zeros(1,S_T*1) MAM_MRI  ...
                                zeros(1,S_T*(1))  zeros(1,N_OPTIONS*N_BC) [1 0 0 0] ];


LAST_FIVE_ZERO = [ last_five_2_W_theta;
              last_five_3_W_theta;
              last_five_4_W_theta;
              last_five_5_W_theta;
	last_five_2_W_z;
	last_five_4_W_z]; 

LAST_FIVE_ONE = [ last_five_1_W_theta;
	last_five_1_3_W_z;
	last_five_1_3_MAM_z;
	last_five_1_3_MRI_z;
	last_five_1_3_U_z;
	last_five_1_3_MAM_MRI_z;
last_five_3_1_W_z;
last_five_3_1_MAM_z;
last_five_3_1_MRI_z;
last_five_3_1_U_z;
last_five_3_1_MAM_MRI_z;
	last_five_3_5_W_z;
	last_five_3_5_MAM_z;
	last_five_3_5_MRI_z;
	last_five_3_5_U_z;
	last_five_3_5_MAM_MRI_z;
last_five_5_3_W_z;
last_five_5_3_MAM_z;
last_five_5_3_MRI_z;
last_five_5_3_U_z;
last_five_5_3_MAM_MRI_z;
          last_five_1_2_W_y;
          last_five_1_2_MAM_y;
          last_five_1_2_MRI_y;
          last_five_1_2_U_y;
          last_five_1_2_MAM_MRI_y; 
              last_five_2_1_W_y;
              last_five_2_1_MAM_y;
              last_five_2_1_MRI_y;
              last_five_2_1_U_y;
              last_five_2_1_MAM_MRI_y; 
last_five_1_3_W_y;
last_five_1_3_MAM_y;
last_five_1_3_MRI_y;
last_five_1_3_U_y;
last_five_1_3_MAM_MRI_y;
	last_five_3_1_W_y;
	last_five_3_1_MAM_y;
	last_five_3_1_MRI_y;
	last_five_3_1_U_y;
	last_five_3_1_MAM_MRI_y;
last_five_2_4_W_y;
last_five_2_4_MAM_y;
last_five_2_4_MRI_y;
last_five_2_4_U_y;
last_five_2_4_MAM_MRI_y;
	last_five_4_2_W_y;
	last_five_4_2_MAM_y;
	last_five_4_2_MRI_y;
	last_five_4_2_U_y;
	last_five_4_2_MAM_MRI_y;
last_five_3_5_W_y;
last_five_3_5_MAM_y;
last_five_3_5_MRI_y;
last_five_3_5_U_y;
last_five_3_5_MAM_MRI_y;
                last_five_5_3_W_y ;
                last_five_5_3_MAM_y ;
                last_five_5_3_MRI_y ;
                last_five_5_3_U_y ;
                last_five_5_3_MAM_MRI_y ];

b_last_five = [ zeros(size(LAST_FIVE_ZERO,1),1) ; ones(size(LAST_FIVE_ONE,1),1) ];

%---------- "REGULAR POLICIES FOR LAST 5 YEARS" ENDS HERE------------------------------------



Less_Than_One = [ regular_1_6_W_theta ; 
		  regular_6_1_W_theta ;
		    regular_1_6_MAM_theta ;
		    regular_6_1_MAM_theta ;
		      regular_1_6_MRI_theta ; 
		      regular_6_1_MRI_theta ;
		        regular_1_6_U_theta ;
		        regular_6_1_U_theta ;
		          regular_1_6_MAM_MRI_theta ;
		          regular_6_1_MAM_MRI_theta ;
          regular_1_2_W_y;
          regular_1_2_MAM_y;
          regular_1_2_MRI_y;
          regular_1_2_U_y;
          regular_1_2_MAM_MRI_y; 
              regular_2_1_W_y;
              regular_2_1_MAM_y;
              regular_2_1_MRI_y;
              regular_2_1_U_y;
              regular_2_1_MAM_MRI_y; 
regular_1_3_W_y;
regular_1_3_MAM_y;
regular_1_3_MRI_y;
regular_1_3_U_y;
regular_1_3_MAM_MRI_y;
	regular_3_1_W_y;
	regular_3_1_MAM_y;
	regular_3_1_MRI_y;
	regular_3_1_U_y;
	regular_3_1_MAM_MRI_y;
regular_2_4_W_y;
regular_2_4_MAM_y;
regular_2_4_MRI_y;
regular_2_4_U_y;
regular_2_4_MAM_MRI_y;
	regular_4_2_W_y;
	regular_4_2_MAM_y;
	regular_4_2_MRI_y;
	regular_4_2_U_y;
	regular_4_2_MAM_MRI_y;
regular_3_5_W_y;
regular_3_5_MAM_y;
regular_3_5_MRI_y;
regular_3_5_U_y;
regular_3_5_MAM_MRI_y;
                regular_5_3_W_y ;
                regular_5_3_MAM_y ;
                regular_5_3_MRI_y ;
                regular_5_3_U_y ;
                regular_5_3_MAM_MRI_y ;
    regular_4_6_W_y ;
    regular_4_6_MAM_y ;
    regular_4_6_MRI_y ;
    regular_4_6_U_y ;
    regular_4_6_MAM_MRI_y ;
regular_6_4_W_y;
regular_6_4_MAM_y;
regular_6_4_MRI_y;
regular_6_4_U_y;
regular_6_4_MAM_MRI_y;
    regular_5_7_W_y ;
    regular_5_7_MAM_y ;
    regular_5_7_MRI_y ;
    regular_5_7_U_y ;
    regular_5_7_MAM_MRI_y ;
regular_7_5_W_y ;
regular_7_5_MAM_y ;
regular_7_5_MRI_y ;
regular_7_5_U_y ;
regular_7_5_MAM_MRI_y ;
    regular_6_8_W_y ;
    regular_6_8_MAM_y ;
    regular_6_8_MRI_y ;
    regular_6_8_U_y ;
    regular_6_8_MAM_MRI_y ;
regular_8_6_W_y ;
regular_8_6_MAM_y ;
regular_8_6_MRI_y ;
regular_8_6_U_y ;
regular_8_6_MAM_MRI_y ;
    regular_7_9_W_y ;
    regular_7_9_MAM_y ;
    regular_7_9_MRI_y ;
    regular_7_9_U_y ;
    regular_7_9_MAM_MRI_y ;
regular_9_7_W_y ;
regular_9_7_MAM_y ;
regular_9_7_MRI_y ;
regular_9_7_U_y ;
regular_9_7_MAM_MRI_y ;
    regular_8_10_W_y ;
    regular_8_10_MAM_y ;
    regular_8_10_MRI_y ;
    regular_8_10_U_y ;
    regular_8_10_MAM_MRI_y ;
regular_10_8_W_y ;
regular_10_8_MAM_y ;
regular_10_8_MRI_y ;
regular_10_8_U_y ;
regular_10_8_MAM_MRI_y ;                
 regular_1_3_W_z;
 regular_1_3_MAM_z;
 regular_1_3_MRI_z;
 regular_1_3_U_z;
 regular_1_3_MAM_MRI_z;
    regular_3_1_W_z;
    regular_3_1_MAM_z;
    regular_3_1_MRI_z;
    regular_3_1_U_z;
    regular_3_1_MAM_MRI_z;   
regular_3_5_W_z;
regular_3_5_MAM_z;
regular_3_5_MRI_z;
regular_3_5_U_z;
regular_3_5_MAM_MRI_z;
    regular_5_3_W_z;
    regular_5_3_MAM_z;
    regular_5_3_MRI_z;
    regular_5_3_U_z;
    regular_5_3_MAM_MRI_z;    
regular_5_7_W_z; 
regular_5_7_MAM_z;
regular_5_7_MRI_z;
regular_5_7_U_z;
regular_5_7_MAM_MRI_z;
    regular_7_5_W_z; 
    regular_7_5_MAM_z; 
    regular_7_5_MRI_z; 
    regular_7_5_U_z; 
    regular_7_5_MAM_MRI_z; 
regular_7_9_W_z; 
regular_7_9_MAM_z; 
regular_7_9_MRI_z; 
regular_7_9_U_z; 
regular_7_9_MAM_MRI_z; 
    regular_9_7_W_z;
    regular_9_7_MAM_z;
    regular_9_7_MRI_z;
    regular_9_7_U_z;
    regular_9_7_MAM_MRI_z;
 regular_1_WAIT_mu];

Less_Than_Zero = [   regular_2_WAIT_z;
   regular_4_WAIT_z;
   regular_6_WAIT_z;
   regular_8_WAIT_z;
   regular_10_WAIT_z;
   regular_2_WAIT_theta;
   regular_3_WAIT_theta;
   regular_4_WAIT_theta;
   regular_5_WAIT_theta;
   regular_7_WAIT_theta;
   regular_8_WAIT_theta;
   regular_9_WAIT_theta;
   regular_10_WAIT_theta;
   regular_2_WAIT_mu;
   regular_3_WAIT_mu;
   regular_4_WAIT_mu;
   regular_5_WAIT_mu;
   regular_6_WAIT_mu;
   regular_7_WAIT_mu;
   regular_8_WAIT_mu;
   regular_9_WAIT_mu;
   regular_10_WAIT_mu];


A_leq = [ A_leq zeros(size(A_leq,1),N_OPTIONS*(N_BC+1)) ];
A_leq = [ A_leq ; Less_Than_One; Less_Than_Zero];
b_leq = [b_leq; ones(size(Less_Than_One,1),1) ; zeros(size(Less_Than_Zero,1),1) ];

A_leq = [ A_leq; LAST_FIVE_ZERO;LAST_FIVE_ONE];
b_leq = [b_leq; b_last_five];

%---------- ENFORCING REGULAR POLICIES ENDS HERE----------%
%-----------------------------------------------------------%

options = cplexoptimset(); 
%options.diagnostics   = 'off';
options.Diagnostics   = 'off';
options.mip.tolerances.absmipgap = 0; 
options.mip.tolerances.mipgap = 0;
% options.mip.tolerances.integrality = 0;

[X,fval,exitflag,output] = cplexmilp(f,A_leq,b_leq,A_eq,b_eq,[],[],[],lb,ub,ctype,[],options);
%

for k = 1 : Time*Action
decision(k,:) = [ X((k-1)*State+1) X((k-1)*State+2) X((k-1)*State+3) X((k-1)*State+4) X((k-1)*State+5) X((k-1)*State+6) ];
end

timely_dec = @(z) [ decision( (z-1)*Action+1,: ); decision( (z-1)*Action+2,:  ); decision( (z-1)*Action+3,:  ); decision( (z-1)*Action+4,:  ); decision( (z-1)*Action+5,:  ) ];
for z= 1:Time

%timely_dec(z)
%fprintf('-------------------------------\n');

end



           if( X(AST+1)   == Y(AST+1)   && X(AST+7)   == Y(AST+7)   && X(AST+13) == Y(AST+13)   && X(AST+19)  == Y(AST+19)  && X(AST+25)  == Y(AST+25) && ...               )
               X(AST+31)  == Y(AST+31)  && X(AST+37)  == Y(AST+37)  && X(AST+43) == Y(AST+43)   && X(AST+49)  == Y(AST+49)  && X(AST+55)  == Y(AST+55) && ...
               X(AST+61)  == Y(AST+61)  && X(AST+67)  == Y(AST+67)  && X(AST+73) == Y(AST+73)   && X(AST+79)  == Y(AST+79)  && X(AST+85)  == Y(AST+85) && ...
               X(AST+91)  == Y(AST+91)  && X(AST+97)  == Y(AST+97)  && X(AST+103) == Y(AST+103) && X(AST+109) == Y(AST+109) && X(AST+115) == Y(AST+115) && ...
               X(AST+121) == Y(AST+121) && X(AST+127) == Y(AST+127) && X(AST+133) == Y(AST+133) && X(AST+139) == Y(AST+139) && X(AST+145) == Y(AST+145) && ...
               X(AST+151) == Y(AST+151) && X(AST+157) == Y(AST+157) && X(AST+163) == Y(AST+163) && X(AST+169) == Y(AST+169) && X(AST+175) == Y(AST+175) && ...
               X(AST+181) == Y(AST+181) && X(AST+187) == Y(AST+187) && X(AST+193) == Y(AST+193) && X(AST+199) == Y(AST+199) && X(AST+205) == Y(AST+205) && ... 
               X(AST+211) == Y(AST+211) && X(AST+217) == Y(AST+217) && X(AST+223) == Y(AST+223) && X(AST+229) == Y(AST+229) && X(AST+235) == Y(AST+235) && ...
               X(AST+241) == Y(AST+241) && X(AST+247) == Y(AST+247) && X(AST+253) == Y(AST+253) && X(AST+259) == Y(AST+259) && X(AST+265) == Y(AST+265) && ...
               X(AST+271) == Y(AST+271) && X(AST+277) == Y(AST+277) && X(AST+283) == Y(AST+283) && X(AST+289) == Y(AST+289) && X(AST+295) == Y(AST+295) )           
           else

-fval
fprintf(fileID,'QALYs: %f\n',-fval);

exitflag
fprintf(fileID,'Code worked properly: %f\n',exitflag);

output

%-------------------------------------------------------------------------
%----------------------------READ THE SOLUTION----------------------------

fprintf('\n');

epsilon = 0.00002;


%------------------------

pr_alive(1) =    X(1)  + X(2)  + X(3)  +  0   +  0  +   0 + ...
                 X(7)  + X(8)  + X(9)  +  0   +  0  +   0 + ...
                 X(13) + X(14) + X(15) +  0   +  0  +   0 + ...
                 X(19) + X(20) + X(21) +  0   +  0  +   0 + ...
                 X(25) + X(26) + X(27) +  0   +  0  +   0 ;
    
pr_alive(2) =    X(301) + X(302) + X(303) +  0   +  0  +   0 + ...
                 X(307) + X(308) + X(309) +  0   +  0  +   0 + ...
                 X(313) + X(314) + X(315) +  0   +  0  +   0 + ...
                 X(319) + X(320) + X(321) +  0   +  0  +   0 + ...
                 X(325) + X(326) + X(327) +  0   +  0  +   0;
             
pr_alive(3) =    X(601) + X(602) + X(603) +  0   +  0  +   0 + ...
                 X(607) + X(608) + X(609) +  0   +  0  +   0 + ...
                 X(613) + X(614) + X(615) +  0   +  0  +   0 + ...
                 X(619) + X(620) + X(621) +  0   +  0  +   0 + ...
                 X(625) + X(626) + X(627) +  0   +  0  +   0;             

pr_alive(4) =    X(901) + X(902) + X(903) +  0   +  0  +   0 + ...
                 X(907) + X(908) + X(909) +  0   +  0  +   0 + ...
                 X(913) + X(914) + X(915) +  0   +  0  +   0 + ...
                 X(919) + X(920) + X(921) +  0   +  0  +   0 + ...
                 X(925) + X(926) + X(927) +  0   +  0  +   0;              

pr_alive(5) =    X(1201) + X(1202) + X(1203) +  0   +  0  +   0 + ...
                 X(1207) + X(1208) + X(1209) +  0   +  0  +   0 + ...
                 X(1213) + X(1214) + X(1215) +  0   +  0  +   0 + ...
                 X(1219) + X(1220) + X(1221) +  0   +  0  +   0 + ...
                 X(1225) + X(1226) + X(1227) +  0   +  0  +   0;   

pr_alive(6) =    X(1501) + X(1502) + X(1503) +  0   +  0  +   0 + ...
                 X(1507) + X(1508) + X(1509) +  0   +  0  +   0 + ...
                 X(1513) + X(1514) + X(1515) +  0   +  0  +   0 + ...
                 X(1519) + X(1520) + X(1521) +  0   +  0  +   0 + ...
                 X(1525) + X(1526) + X(1527) +  0   +  0  +   0; 

pr_alive(7) =    X(1801) + X(1802) + X(1803) +  0   +  0  +   0 + ...
                 X(1807) + X(1808) + X(1809) +  0   +  0  +   0 + ...
                 X(1813) + X(1814) + X(1815) +  0   +  0  +   0 + ...
                 X(1819) + X(1820) + X(1821) +  0   +  0  +   0 + ...
                 X(1825) + X(1826) + X(1827) +  0   +  0  +   0;    
             
pr_alive(8) =    X(2101) + X(2102) + X(2103) +  0   +  0  +   0 + ...
                 X(2107) + X(2108) + X(2109) +  0   +  0  +   0 + ...
                 X(2113) + X(2114) + X(2115) +  0   +  0  +   0 + ...
                 X(2119) + X(2120) + X(2121) +  0   +  0  +   0 + ...
                 X(2125) + X(2126) + X(2127) +  0   +  0  +   0;
%------------------------COMPUTE BUDGET????????????????                    
for k = 1: N_BC
    
fprintf(' Budget (%d-%d) is %d \n',(k-1)*TI_BC+1,k*TI_BC,pr_alive(k)*BUDGET_OF_SCREENING);
fprintf(fileID,' Budget (%d-%d) is %d \n',(k-1)*TI_BC+1,k*TI_BC,pr_alive(k)*BUDGET_OF_SCREENING);
end
if(Z>0)
fprintf(' Budget (%d-%d) is %d \n',(N_BC)*TI_BC+1,Time-1,pr_alive(N_BC+1)*BUDGET_OF_SCREENING);
fprintf(fileID,' Budget (%d-%d) is %d \n',(N_BC)*TI_BC+1,Time-1,pr_alive(N_BC+1)*BUDGET_OF_SCREENING);
end

fprintf('\n The Optimal Actions \n\n');
fprintf(fileID,'\n The Optimal Actions \n\n');

for t = 1 : Time-1

    MATRIX = timely_dec(t);

    for act = 1 : Action
         
         if ( MATRIX(act,1) >= epsilon )
            fprintf('time = %d action = %d\n',t,act);
            fprintf(fileID,'time = %d action = %d\n',t,act);
         end
    end 

    MATRIX = [];

end 

%-------------------------------------------------------------------------
%------------------------COMPUTE THE COST---------------------------------
fprintf('\n');
fprintf(fileID,'\n');
for k = 1: N_BC

fprintf('Cost(%d-%d)= %f \n',TI_BC*k,TI_BC*(k-1)+1,Budget_Level(k,:)*X(1:2*AST));
fprintf(fileID,'Cost(%d-%d)= %f \n',TI_BC*k,TI_BC*(k-1)+1,Budget_Level(k,:)*X(1:2*AST));

end

if(Z>0)
fprintf('Cost(%d-%d)= %f \n',Time-1,TI_BC*(N_BC)+1,Budget_Level(N_BC+1,:)*X(1:2*AST));
fprintf(fileID,'Cost(%d-%d)= %f \n',Time-1,TI_BC*(N_BC)+1,Budget_Level(N_BC+1,:)*X(1:2*AST));
end

%-------------------------------------------------------------------------

%-------------------------------------------------------------------------
%---------------------------REWARD/OBJECTIVE FUNCTION------------------------ 
%for k = 1 : Time*Action
%profit(k,:) = [ f((k-1)*State+1) f((k-1)*State+2) f((k-1)*State+3) f((k-1)*State+4) f((k-1)*State+5) f((k-1)*State+6) ];
%end

%timely_profit = @(z) [ profit( (z-1)*Action+1,: ); profit( (z-1)*Action+2,:  ); profit( (z-1)*Action+3,:  ); profit( (z-1)*Action+4,:  ); profit( (z-1)*Action+5,:  ) ];

%for z= 1:Time
%fprintf('time: %d\n',z);
%-timely_profit(z)
%fprintf('-------------------------------\n');

%end
%-------------------------------------------------------------------------


% %ENFORCED POLICY%
% 
% for k=1:N_BC
%    if ( X(2*AST+k) >= 0.950 )
%    fprintf('\n (%d-%d) = 3 year Policy', 25+(k-1)*12, 25-1+k*12)
%    else
%    fprintf('\n (%d-%d) = 4 year Policy', 25+(k-1)*12, 25-1+k*12)
%    end
% end
    fprintf('\n');
    fprintf(fileID,'\n');
i=1;
fprintf( ' 1=every year \n 2=every 2 year  \n 3=every 5 year  \n 0=ever 10 year \n \n' );
fprintf(fileID, ' 1=every year \n 2=every 2 year  \n 3=every 5 year  \n 0=ever 10 year \n \n' );
 for m = 1 : (N_BC+1)*N_OPTIONS
         if ( X(2*AST+m) >= 0.950  )             
         fprintf( '%d th cycle = %d \n',i ,mod(m,4) );
         fprintf(fileID, '%d th cycle = %d \n',i ,mod(m,4) );
         i=i+1;
         end
 end

           end

            fprintf(fileID,'\n');
end

